{"remainingRequest":"C:\\xampp\\htdocs\\node-postgres\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\node-postgres\\client\\src\\components\\PostComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\node-postgres\\client\\src\\components\\PostComponent.vue","mtime":1584826820890},{"path":"C:\\xampp\\htdocs\\node-postgres\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\node-postgres\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\node-postgres\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\node-postgres\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgUG9zdFNlcnZpY2UgZnJvbSAnLi4vUG9zdFNlcnZpY2UnOwoKZXhwb3J0IGRlZmF1bHQgewoKICBuYW1lOiAnUG9zdENvbXBvbmVudCcsCiAgZGF0YSgpewogICAgICByZXR1cm57CiAgICAgICAgdG9kb3MgOiBbXSwKICAgICAgICBlcnJvciA6ICcnLAogICAgICAgIHRhc2sgOiAnJywKICAgICAgICBwcmlvcml0eSA6ICcnLAogICAgICAgIHRhc2tkYXRlIDogJycsCiAgICAgICAgb3B0aW9uczogWwogICAgICAgICAgICB7bmFtZTogJ0hpZ2gnLCBpZDogMX0sCiAgICAgICAgICAgIHtuYW1lOiAnTWVkaXVtJywgaWQ6IDJ9LAogICAgICAgICAgICB7bmFtZTogJ0xvdycsIGlkOiAzfSwKICAgICAgICBdCiAgICB9CiAgfSwKICBhc3luYyBjcmVhdGVkKCl7CiAgICAgIHRoaXMuZ2V0VG9kb3MoKQogIH0sCiAgbWV0aG9kczogewogICAgICBhc3luYyBjcmVhdGVQb3N0KCkgeyAKICAgICAgICBhd2FpdCBQb3N0U2VydmljZS5pbnNlcnRQb3N0KCB0aGlzLnRhc2ssIHRoaXMucHJpb3JpdHkpOwogICAgICAgIHRoaXMuZ2V0VG9kb3MoKTsKICAgICAgICBhbGVydCgiVGFzayBJbnNlcnRlZCEiKQogICAgICB9LAogICAgICBhc3luYyBkZWxldGVQb3N0KGlkKSB7IAogICAgICAgICAgYXdhaXQgUG9zdFNlcnZpY2UuZGVsZXRlUG9zdCggaWQgKTsKICAgICAgICAgIHRoaXMuZ2V0VG9kb3MoKTsKICAgICAgfSwKICAgICAgYXN5bmMgZ2V0VG9kb3MoKXsKICAgICAgICBsZXQgdG9kb3MgPSBhd2FpdCBQb3N0U2VydmljZS5nZXRUb2RvcygpOwogICAgICAgIHRoaXMudG9kb3MgPSB0b2Rvcy5kYXRhOwogICAgICAgIHRoaXMudGFzayA9ICcnOwogICAgICB9LAogICAgICBhc3luYyBjaGFuZ2VQcmlvcml0eShpZCwgZXZlbnQpewogICAgICAgIGF3YWl0IFBvc3RTZXJ2aWNlLnVwZGF0ZVBvc3QoIGlkLCBldmVudC50YXJnZXQudmFsdWUpOwogICAgICAgIHRoaXMuZ2V0VG9kb3MoKTsKICAgICAgICBhbGVydCgiVGFzayBVcGRhdGVkIikKICAgICAgfQogIH0KfQo="},{"version":3,"sources":["PostComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PostComponent.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n      <h1>Todo List</h1>\n      <div class=\"post-container\">\n          <input type=\"text\" class=\"inputx\" v-model=\"task\" placeholder=\"Enter text\">\n          <button v-on:click=\"createPost\" class=\"buttonx\">Post!</button>\n          <div class=\"clr mb10\"></div>\n          <div class=\"postx\"\n            v-for=\"todo in todos\"\n            v-bind:item=\"todo\"\n            v-bind:key=\"todo.id\" >\n            <b>{{todo.id}} .</b> {{todo.task}} || {{ todo.taskdate }} \n            \n                <button v-on:click=\"deletePost(todo.id)\" class=\"buttony\">x</button>\n                <select class=\"buttony\" :required=\"true\" @change=\"changePriority(todo.id, $event)\">\n                    <option :selected=\"true\">{{ todo.priority }}</option>\n                    <option v-for=\"option in options\" v-bind:value=\"option.name\" v-bind:key=\"option.id\" >{{ option.name }}</option>\n                </select>\n\n                <div class=\"clr\"></div>\n          </div>\n      </div>\n  </div>\n</template>\n\n<script>\n\nimport PostService from '../PostService';\n\nexport default {\n\n  name: 'PostComponent',\n  data(){\n      return{\n        todos : [],\n        error : '',\n        task : '',\n        priority : '',\n        taskdate : '',\n        options: [\n            {name: 'High', id: 1},\n            {name: 'Medium', id: 2},\n            {name: 'Low', id: 3},\n        ]\n    }\n  },\n  async created(){\n      this.getTodos()\n  },\n  methods: {\n      async createPost() { \n        await PostService.insertPost( this.task, this.priority);\n        this.getTodos();\n        alert(\"Task Inserted!\")\n      },\n      async deletePost(id) { \n          await PostService.deletePost( id );\n          this.getTodos();\n      },\n      async getTodos(){\n        let todos = await PostService.getTodos();\n        this.todos = todos.data;\n        this.task = '';\n      },\n      async changePriority(id, event){\n        await PostService.updatePost( id, event.target.value);\n        this.getTodos();\n        alert(\"Task Updated\")\n      }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}